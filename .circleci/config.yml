version: 2
jobs:
  build:
    docker:
    - image: circleci/ruby:2.5.1-node-browsers
      environment:
        - BUNDLER_VERSION: 2.1.4
        - RAILS_ENV: 'test'
    - image: circleci/mysql:5.7
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        - MYSQL_ROOT_HOST: '127.0.0.1'

    working_directory: ~/muscle-app


    steps:
    - checkout

    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        - v1-dependencies-

    - run:
        name: install dependencies
        command: |
          gem install bundler -v 2.1.4
          bundle install --jobs=4 --retry=3 --path vendor/bundle

    - save_cache:
        paths:
        - ./vendor/bundle
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}

    # Restore yarn cache
    - type: cache-restore
      name: Restore bundle cache
      key: rails-demo-bundle-{{ checksum "yarn.lock" }}

    - run:
        name: yarn Install
        command: yarn install --ignore-engines

    # Store yarn cache
    - type: cache-save
      name: Save bundle cache
      key: rails-demo-bundle-{{ checksum 'yarn.lock' }}
      paths: .yarn-cache


    # Database setup
    - run: mv ./config/database.yml.ci ./config/database.yml

    # Database setup
    - run:
        name: Databasesetup
        command: |
           bundle exec rake db:create
           bundle exec rake db:schema:load

    # run tests!
    - run:
        name: Run rspec
        command: |
          mkdir /tmp/test-results
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
            circleci tests split --split-by=timings)"

          bundle exec rspec \
            --format progress \
            --format RspecJunitFormatter \
            --out /tmp/test-results/rspec.xml \
            --format progress \
            $TEST_FILES

    # collect reports
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results

    - add_ssh_keys:
        fingerprints: "5b:90:0b:31:d0:4d:c3:ce:d7:9d:b9:02:0a:db:50:3f"

    - deploy:
        name: Capistrano deploy
        command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap production deploy      